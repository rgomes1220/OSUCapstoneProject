AWSTemplateFormatVersion: 2010-09-09

Parameters:
  AppPrefix:
    Description: Prefix for the application
    Type: String
    Default: osu-engr-expo

  DeplEnv:
    Description: Deployment environment
    Type: String
    AllowedValues:
      - dev
      - prod

Resources:
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Join ["-", [!Ref AppPrefix, !Ref DeplEnv, "user-pool"]]
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      AutoVerifiedAttributes:
        - email
      UsernameAttributes:
        - email
      EmailConfiguration:
        EmailSendingAccount: COGNITO_DEFAULT
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true
          TemporaryPasswordValidityDays: 14
      Schema:
        - AttributeDataType: String
          Mutable: false
          Name: email
          Required: true

  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName:
        !Join ["-", [!Ref AppPrefix, !Ref DeplEnv, "user-pool-client"]]
      ExplicitAuthFlows:
        - ALLOW_ADMIN_USER_PASSWORD_AUTH
        - ALLOW_CUSTOM_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
        - ALLOW_USER_SRP_AUTH
      GenerateSecret: false
      RefreshTokenValidity: 30
      UserPoolId: !Ref UserPool
      PreventUserExistenceErrors: "ENABLED"

  IdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties:
      IdentityPoolName:
        !Join ["-", [!Ref AppPrefix, !Ref DeplEnv, "identity-pool"]]
      # Don't allow unathenticated users
      AllowUnauthenticatedIdentities: false
      # Link to our User Pool
      CognitoIdentityProviders:
        - ClientId: !Ref UserPoolClient
          ProviderName: !GetAtt UserPool.ProviderName

  # IAM roles
  IdentityPoolRoles:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    Properties:
      IdentityPoolId:
        Ref: IdentityPool
      Roles:
        authenticated: !GetAtt CognitoAuthRole.Arn

  # IAM role used for authenticated users
  CognitoAuthRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Federated: "cognito-identity.amazonaws.com"
            Action:
              - "sts:AssumeRoleWithWebIdentity"
            Condition:
              StringEquals:
                "cognito-identity.amazonaws.com:aud": !Ref IdentityPool
              "ForAnyValue:StringLike":
                "cognito-identity.amazonaws.com:amr": authenticated
      Policies:
        - PolicyName:
            !Join [
              "-",
              [!Ref AppPrefix, !Ref DeplEnv, "cognito-authorized-policy"],
            ]
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "mobileanalytics:PutEvents"
                  - "cognito-sync:*"
                  - "cognito-identity:*"
                Resource: "*"
              - Effect: "Allow"
                Action:
                  - "execute-api:Invoke"
                Resource: "*"
              - Effect: "Allow"
                Action:
                  - "s3:*"
                Resource:
                  - Fn::Join:
                      - ""
                      - - "arn:aws:s3:::osu-engr-expo-test-images"
                        - "/protected/"
                        - "$"
                        - "{cognito-identity.amazonaws.com:sub}/*"

Outputs:
  CognitoUserPoolId:
    Description: The Pool ID of the Cognito User Pool
    Value: !Ref UserPool
  CognitoUserPoolClientId:
    Description: The Client ID User Pool App
    Value: !Ref UserPoolClient
  CognitoIdentityPoolId:
    Value: !Ref IdentityPool
